#!/bin/bash

# This converts a docker file to a shell file
# Almost guaranteed to not work with many Docker files, but hey, it works for us

HOME_DIRECTORY=/home/dev
CONVERT_HOME_DIRECTORY=1

INPUT=Dockerfile
OUTPUT=Dockerfile.sh

cp -f $INPUT $OUTPUT

# Convert FROM, MAINTAINER, VOLUME, CMD, ENTRYPOINT to comments
sed -i "s/^FROM\s/# FROM /gI" $OUTPUT
sed -i "s/^MAINTAINER\s/# MAINTAINER /gI" $OUTPUT
sed -i "s/^VOLUME\s/# VOLUME /gI" $OUTPUT
sed -i "s/^CMD\s/# CMD /gI" $OUTPUT
sed -i "s/^ENTRYPOINT\s/# ENTRYPOINT /gI" $OUTPUT

# Get rid of RUNs
sed -i "s/^RUN\s//gI" $OUTPUT

# Convert home directory into squiggles (tildes)
sed -i "s/$HOME_DIRECTORY/~/g" $OUTPUT

# Convert ENVs into EXPORTs
sed -r 's/^ENV\s([^ ]*)\s*([a-z]*)/export \1=\2/gI' -i $OUTPUT

# Get rid of EXPOSE todo: open up ports based on these?
sed -i "s/^EXPOSE\s/# EXPOSE /gI" $OUTPUT

# Convert ADDs into cp
sed -i "s/^ADD\s/cp -R /gI" $OUTPUT

# Convert COPYs into cp
sed -i "s/^COPY\s/cp -R /gI" $OUTPUT

# Convert WORKDIR into cd
sed -i "s/^WORKDIR\s/cd /gI" $OUTPUT

# Timestamp
sed -i '1s/^/# Generated by docker_to_sh, for all your shoddy bash script from Dockerfile generation needs. \n/' $OUTPUT

# Echo env variables to .bashrc file if they don't exist
IFS=""
file=~/.profile
for line in `grep 'export ' $OUTPUT`; do
    grep -q "$line" "$file" || echo "$line" >> "$file"
done

# Fix COPY all files in cp
sed -i -e 's/\(cp.*\/\)\s/\1* /' $OUTPUT
